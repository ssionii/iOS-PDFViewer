//
//  MagazineDetailViewController.swift
//  PdfSample
//
//  Created by 60058232 on 2021/01/26.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import PDFKit

protocol MagazineDetailDisplayLogic: class
{
	func displayMagazine(viewModel: MagazineDetail.FetchMagazine.ViewModel)
}

class MagazineDetailViewController: UIViewController, MagazineDetailDisplayLogic
{
	var interactor: MagazineDetailBusinessLogic?
	var router: (NSObjectProtocol & MagazineDetailRoutingLogic & MagazineDetailDataPassing)?

	// MARK: Object lifecycle

	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
	{
		super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
		setup()
	}

	required init?(coder aDecoder: NSCoder)
	{
		super.init(coder: aDecoder)
		setup()
	}

	// MARK: Setup

	private func setup()
	{
		let viewController = self
		let interactor = MagazineDetailInteractor()
		let presenter = MagazineDetailPresenter()
		let router = MagazineDetailRouter()
		viewController.interactor = interactor
		viewController.router = router
		interactor.presenter = presenter
		presenter.viewController = viewController
		router.viewController = viewController
		router.dataStore = interactor
	}

	// MARK: Routing

	override func prepare(for segue: UIStoryboardSegue, sender: Any?)
	{
		if let scene = segue.identifier {
			let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
			if let router = router, router.responds(to: selector) {
				router.perform(selector, with: segue)
			}
		}
	}

	// MARK: View lifecycle

	override func viewDidLoad()
	{
		super.viewDidLoad()
		setPDFView()
		fetchMagazine()
	}

	// MARK: Fetch magazine

	var pdfView : PDFView?

	func setPDFView(){
		pdfView = PDFView(frame: self.view.bounds)
		if pdfView != nil {
			pdfView?.autoresizingMask = [.flexibleWidth, .flexibleHeight]
			self.view.addSubview(pdfView!)
			pdfView?.autoScales = true
		}
	}

	func fetchMagazine()
	{
		let request = MagazineDetail.FetchMagazine.Request()
		interactor?.fetchMagazine(request: request)
	}

	func displayMagazine(viewModel: MagazineDetail.FetchMagazine.ViewModel)
	{
		self.navigationController?.navigationBar.topItem?.title = viewModel.title
		pdfView?.document = viewModel.pdfDocument
	}

}
